[{"/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/index.tsx":"1","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/App.tsx":"2","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/containers/mainContainer/index.tsx":"3","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/layouts/mainLayout/index.tsx":"4","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/components/sideNave/index.tsx":"5","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/routes/index.ts":"6","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/routes/const.ts":"7","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/pages/main/index.tsx":"8","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/pages/content/index.tsx":"9","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/containers/index.tsx":"10","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/layouts/index.tsx":"11","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/layouts/MainLayout/index.tsx":"12","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/components/mainBox/index.tsx":"13","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/modules/slices/projectsSlice.ts":"14"},{"size":358,"mtime":1610324654523,"results":"15","hashOfConfig":"16"},{"size":1635,"mtime":1610324654517,"results":"17","hashOfConfig":"16"},{"size":1199,"mtime":1610325063593,"results":"18","hashOfConfig":"16"},{"size":1539,"mtime":1610324981374,"results":"19","hashOfConfig":"16"},{"size":4157,"mtime":1610324654521,"results":"20","hashOfConfig":"16"},{"size":495,"mtime":1610325233004,"results":"21","hashOfConfig":"16"},{"size":69,"mtime":1610002944051,"results":"22","hashOfConfig":"16"},{"size":302,"mtime":1610325088885,"results":"23","hashOfConfig":"16"},{"size":208,"mtime":1610324654528,"results":"24","hashOfConfig":"16"},{"size":33,"mtime":1610323741995,"results":"25","hashOfConfig":"16"},{"size":30,"mtime":1610323757146,"results":"26","hashOfConfig":"16"},{"size":1313,"mtime":1610003727612,"results":"27","hashOfConfig":"16"},{"size":3853,"mtime":1610324654519,"results":"28","hashOfConfig":"16"},{"size":1337,"mtime":1610324654526,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xpz70h",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/index.tsx",[],"/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/App.tsx",["62","63"],"import React from 'react';\n\nimport { main, content } from 'pages';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { routes } from 'routes';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path={routes.main[0].path} component={main} exact />;\n        <Route path={routes.content[0].path} component={content} exact />;\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n",["64","65"],"/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/containers/mainContainer/index.tsx",["66"],"import React from 'react';\n\n//components\n// import { mainLayout } from '../../layouts';\n\nexport const MainContainer = () => {\n  return <div>컨텐츠</div>;\n};\n\n// export default mainContainer;\n","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/layouts/mainLayout/index.tsx",[],"/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/components/sideNave/index.tsx",[],"/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/routes/index.ts",[],"/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/routes/const.ts",[],"/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/pages/main/index.tsx",[],"/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/pages/content/index.tsx",[],"/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/containers/index.tsx",[],"/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/layouts/index.tsx",[],"/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/layouts/MainLayout/index.tsx",[],"/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/components/mainBox/index.tsx",["67","68","69","70"],"import React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSelector } from 'react-redux';\nimport { selectMenu, selectProjects } from 'modules/slices/projectsSlice';\n// interface favoritesProps {\n//   favorites: boolean;\n//   setFavorites: Dispatch<SetStateAction<boolean>>;\n// }\n\ninterface removeProjectProps {\n  removeProject: (e: any) => void;\n  checkFavorit: (e: any) => void;\n}\ninterface projectItem {\n  id: number;\n  title: string;\n  people: number;\n}\n\nconst ItemStyle = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 20px 20px;\n  box-sizing: border-box;\n`;\nconst ItemBoxStyle = styled.div`\n  margin-right: 15px;\n  width: 200px;\n  height: 200px;\n  border-radius: 10px;\n  padding: 15px;\n  box-sizing: border-box;\n  background: ${(props) => props.color};\n  font-size: 16px;\n`;\n\nconst FavoritesProjectStyle = styled(FontAwesomeIcon)`\n  color: block;\n  margin-right: 10px;\n`;\n\nconst MainBox = ({ removeProject, checkFavorit }: removeProjectProps) => {\n  const itemBoxWrapper = useRef<any>();\n  const [title, setTitle] = useState<string>('');\n  const [project, setProject] = useState<projectItem[]>([]);\n  const color = [\n    'mistyrose',\n    'skyblue',\n    'gold',\n    'tomato',\n    'coral',\n    'gray',\n    'aquamarine',\n    'thistle',\n    'lightblue',\n    'cornflowerblue',\n  ];\n\n  const productList = useSelector(selectProjects);\n  const menu = useSelector(selectMenu);\n\n  return (\n    <ItemStyle>\n      {menu === 'all' ? (\n        <>\n          {productList &&\n            productList.map((items: any, index: any) => {\n              console.log(items.favorites);\n              return (\n                <ItemBoxStyle\n                  key={items.id}\n                  color={color[Math.floor(Math.random() * 10)]}\n                  ref={itemBoxWrapper}\n                  data-id={items.id}\n                >\n                  <p\n                    style={{ textAlign: 'right', lineHeight: '16px' }}\n                    onClick={(e) => removeProject(e)}\n                  >\n                    X\n                  </p>\n                  <h3>{items.title}</h3>\n                  <p>{items.people}명 참여중</p>\n                  <FavoritesProjectStyle\n                    style={{\n                      color: items.favorites === true ? 'yellow' : 'black',\n                    }}\n                    className=\"favorites-project\"\n                    icon={faStar}\n                    onClick={(e) => checkFavorit(e)}\n                  ></FavoritesProjectStyle>\n                </ItemBoxStyle>\n              );\n            })}\n        </>\n      ) : (\n        productList\n          .filter((item: any) => {\n            return item.favorites;\n          })\n          .map((items: any, index: any) => {\n            return (\n              <ItemBoxStyle\n                key={items.id}\n                color={color[Math.floor(Math.random() * 10)]}\n                ref={itemBoxWrapper}\n                data-id={items.id}\n              >\n                <p\n                  style={{ textAlign: 'right', lineHeight: '16px' }}\n                  onClick={(e) => removeProject(e)}\n                >\n                  X\n                </p>\n                <h3>{items.title}</h3>\n                <p>{items.people}명 참여중</p>\n                <FavoritesProjectStyle\n                  style={{\n                    color: items.favorites === true ? 'yellow' : 'black',\n                  }}\n                  className=\"favorites-project\"\n                  icon={faStar}\n                  onClick={(e) => checkFavorit(e)}\n                ></FavoritesProjectStyle>\n              </ItemBoxStyle>\n            );\n          })\n      )}\n    </ItemStyle>\n  );\n};\n\nexport default MainBox;\n","/Users/imform-mb-2/work/GOOD/flow-clone-coding/src/modules/slices/projectsSlice.ts",[],{"ruleId":"71","severity":1,"message":"72","line":9,"column":10,"nodeType":"73","messageId":"74","endLine":9,"endColumn":21},{"ruleId":"71","severity":1,"message":"75","line":10,"column":10,"nodeType":"73","messageId":"74","endLine":10,"endColumn":24},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"71","severity":1,"message":"80","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"81","line":46,"column":10,"nodeType":"73","messageId":"74","endLine":46,"endColumn":15},{"ruleId":"71","severity":1,"message":"82","line":46,"column":17,"nodeType":"73","messageId":"74","endLine":46,"endColumn":25},{"ruleId":"71","severity":1,"message":"83","line":47,"column":10,"nodeType":"73","messageId":"74","endLine":47,"endColumn":17},{"ruleId":"71","severity":1,"message":"84","line":47,"column":19,"nodeType":"73","messageId":"74","endLine":47,"endColumn":29},"@typescript-eslint/no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'selectProjects' is defined but never used.","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'useState' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'project' is assigned a value but never used.","'setProject' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]