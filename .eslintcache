[{"/Users/imform/Documents/Flow/src/index.tsx":"1","/Users/imform/Documents/Flow/src/App.tsx":"2","/Users/imform/Documents/Flow/src/store/index.ts":"3","/Users/imform/Documents/Flow/src/pages/index.ts":"4","/Users/imform/Documents/Flow/src/routes/index.ts":"5","/Users/imform/Documents/Flow/src/routes/const.ts":"6","/Users/imform/Documents/Flow/src/pages/content/index.tsx":"7","/Users/imform/Documents/Flow/src/pages/main/index.tsx":"8","/Users/imform/Documents/Flow/src/layouts/index.tsx":"9","/Users/imform/Documents/Flow/src/containers/index.tsx":"10","/Users/imform/Documents/Flow/src/containers/mainContainer/index.tsx":"11","/Users/imform/Documents/Flow/src/layouts/mainLayout/index.tsx":"12","/Users/imform/Documents/Flow/src/containers/contentContainer/index.tsx":"13","/Users/imform/Documents/Flow/src/modules/project/favoriteProject.ts":"14","/Users/imform/Documents/Flow/src/components/index.ts":"15","/Users/imform/Documents/Flow/src/components/sideNav/index.tsx":"16","/Users/imform/Documents/Flow/src/components/contentChart/index.tsx":"17","/Users/imform/Documents/Flow/src/components/contentTicket/index.tsx":"18","/Users/imform/Documents/Flow/src/components/mainBox/index.tsx":"19","/Users/imform/Documents/Flow/src/components/contentAside/index.tsx":"20","/Users/imform/Documents/Flow/src/components/contentWrite/index.tsx":"21","/Users/imform/Documents/Flow/src/store/store.ts":"22","/Users/imform/Documents/Flow/src/store/write.ts":"23","/Users/imform/Documents/Flow/src/store/menu.ts":"24","/Users/imform/Documents/Flow/src/store/project.ts":"25"},{"size":341,"mtime":1610425859672,"results":"26","hashOfConfig":"27"},{"size":554,"mtime":1610350714825,"results":"28","hashOfConfig":"27"},{"size":76,"mtime":1610431652366,"results":"29","hashOfConfig":"27"},{"size":98,"mtime":1610332609161,"results":"30","hashOfConfig":"27"},{"size":460,"mtime":1610335222777,"results":"31","hashOfConfig":"27"},{"size":69,"mtime":1610323738886,"results":"32","hashOfConfig":"27"},{"size":243,"mtime":1610335222774,"results":"33","hashOfConfig":"27"},{"size":273,"mtime":1610332609163,"results":"34","hashOfConfig":"27"},{"size":54,"mtime":1610332609159,"results":"35","hashOfConfig":"27"},{"size":126,"mtime":1610332609155,"results":"36","hashOfConfig":"27"},{"size":836,"mtime":1610417761824,"results":"37","hashOfConfig":"27"},{"size":2565,"mtime":1610412723445,"results":"38","hashOfConfig":"27"},{"size":3886,"mtime":1610440416454,"results":"39","hashOfConfig":"27"},{"size":540,"mtime":1610412723450,"results":"40","hashOfConfig":"27"},{"size":151,"mtime":1610350714837,"results":"41","hashOfConfig":"27"},{"size":4185,"mtime":1610425859666,"results":"42","hashOfConfig":"27"},{"size":89,"mtime":1610350714830,"results":"43","hashOfConfig":"27"},{"size":4487,"mtime":1610440416430,"results":"44","hashOfConfig":"27"},{"size":4817,"mtime":1610440416428,"results":"45","hashOfConfig":"27"},{"size":2521,"mtime":1610425859661,"results":"46","hashOfConfig":"27"},{"size":4455,"mtime":1610440416460,"results":"47","hashOfConfig":"27"},{"size":310,"mtime":1610431652367,"results":"48","hashOfConfig":"27"},{"size":421,"mtime":1610440416437,"results":"49","hashOfConfig":"27"},{"size":389,"mtime":1610440416433,"results":"50","hashOfConfig":"27"},{"size":1847,"mtime":1610440416434,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"142ibnu",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},"/Users/imform/Documents/Flow/src/index.tsx",[],"/Users/imform/Documents/Flow/src/App.tsx",[],"/Users/imform/Documents/Flow/src/store/index.ts",[],["107","108"],"/Users/imform/Documents/Flow/src/pages/index.ts",[],"/Users/imform/Documents/Flow/src/routes/index.ts",[],"/Users/imform/Documents/Flow/src/routes/const.ts",[],"/Users/imform/Documents/Flow/src/pages/content/index.tsx",[],"/Users/imform/Documents/Flow/src/pages/main/index.tsx",[],"/Users/imform/Documents/Flow/src/layouts/index.tsx",[],"/Users/imform/Documents/Flow/src/containers/index.tsx",[],"/Users/imform/Documents/Flow/src/containers/mainContainer/index.tsx",[],"/Users/imform/Documents/Flow/src/layouts/mainLayout/index.tsx",[],"/Users/imform/Documents/Flow/src/containers/contentContainer/index.tsx",["109"],"/Users/imform/Documents/Flow/src/modules/project/favoriteProject.ts",[],"/Users/imform/Documents/Flow/src/components/index.ts",[],"/Users/imform/Documents/Flow/src/components/sideNav/index.tsx",[],"/Users/imform/Documents/Flow/src/components/contentChart/index.tsx",[],"/Users/imform/Documents/Flow/src/components/contentTicket/index.tsx",[],"/Users/imform/Documents/Flow/src/components/mainBox/index.tsx",["110","111"],"import React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectMenu, selectProjects } from 'store';\nimport { Link } from 'react-router-dom';\n\nimport { Modal } from 'antd';\n\n// interface favoritesProps {\n//   favorites: boolean;\n//   setFavorites: Dispatch<SetStateAction<boolean>>;\n// }\n\ninterface removeProjectProps {\n  removeProject: (e: any) => void;\n  checkFavorit: (e: any) => void;\n}\ninterface projectItem {\n  id: number;\n  title: string;\n  people: number;\n}\n\nconst ItemStyle = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 20px 20px;\n  box-sizing: border-box;\n`;\nconst ItemBoxStyle = styled.div`\n  margin-right: 15px;\n  width: 200px;\n  height: 200px;\n  border-radius: 10px;\n  padding: 15px;\n  box-sizing: border-box;\n  background: ${(props) => props.color};\n  font-size: 16px;\n`;\n\nconst FavoritesProjectStyle = styled(FontAwesomeIcon)`\n  color: block;\n  margin-right: 10px;\n`;\n\nexport const MainBox = ({ removeProject, checkFavorit }: removeProjectProps) => {\n  const itemBoxWrapper = useRef<any>();\n  const [isModalVisible, setIsModalVisible] = useState<boolean>(false);\n  const [thisProject, setThisProject] = useState<any>();\n\n  const removeRef = useRef<any>();\n\n  const color = [\n    'mistyrose',\n    'skyblue',\n    'gold',\n    'tomato',\n    'coral',\n    'gray',\n    'aquamarine',\n    'thistle',\n    'lightblue',\n    'cornflowerblue',\n  ];\n\n  const productList = useSelector(selectProjects);\n  const menu = useSelector(selectMenu);\n\n  const showModal = (e: any) => {\n    setIsModalVisible(true);\n    setThisProject(e);\n  };\n\n  const removeCancel = () => {\n    removeProject(thisProject);\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  console.log(removeRef);\n  return (\n    <ItemStyle>\n      {menu === 'all' ? (\n        <>\n          {productList &&\n            productList.map((items: any, index: any) => {\n              console.log(items.favorites);\n              return (\n                <ItemBoxStyle\n                  key={items.id}\n                  color={color[Math.floor(Math.random() * 10)]}\n                  ref={itemBoxWrapper}\n                  data-id={items.id}\n                >\n                  <p style={{ textAlign: 'right', lineHeight: '16px' }} onClick={(e) => showModal(e)} ref={removeRef}>\n                    X\n                  </p>\n                  <Modal\n                    title=\"프로젝트를 삭제 하시겠습니까?\"\n                    visible={isModalVisible}\n                    onOk={removeCancel}\n                    onCancel={handleCancel}\n                  ></Modal>\n                  <Link to={`${items.id}`}>\n                    <h3>{items.title}</h3>\n                  </Link>\n                  <p>{items.people.length}명 참여중</p>\n                  <FavoritesProjectStyle\n                    style={{\n                      color: items.favorites === true ? 'yellow' : 'black',\n                    }}\n                    className=\"favorites-project\"\n                    icon={faStar}\n                    onClick={(e) => checkFavorit(e)}\n                  ></FavoritesProjectStyle>\n                </ItemBoxStyle>\n              );\n            })}\n        </>\n      ) : (\n        productList\n          .filter((item: any) => {\n            return item.favorites;\n          })\n          .map((items: any, index: any) => {\n            return (\n              <ItemBoxStyle\n                key={items.id}\n                color={color[Math.floor(Math.random() * 10)]}\n                ref={itemBoxWrapper}\n                data-id={items.id}\n              >\n                <p style={{ textAlign: 'right', lineHeight: '16px' }} onClick={(e) => showModal(e)} ref={removeRef}>\n                  X\n                </p>\n                <Modal\n                  title=\"프로젝트를 삭제 하시겠습니까?\"\n                  visible={isModalVisible}\n                  onOk={removeCancel}\n                  onCancel={handleCancel}\n                ></Modal>\n                <Link to={`${items.id}`}>\n                  <h3>{items.title}</h3>\n                </Link>\n                <p>{items.people.length}명 참여중</p>\n                <FavoritesProjectStyle\n                  style={{\n                    color: items.favorites === true ? 'yellow' : 'black',\n                  }}\n                  className=\"favorites-project\"\n                  icon={faStar}\n                  onClick={(e) => checkFavorit(e)}\n                ></FavoritesProjectStyle>\n              </ItemBoxStyle>\n            );\n          })\n      )}\n    </ItemStyle>\n  );\n};\n","/Users/imform/Documents/Flow/src/components/contentAside/index.tsx",[],"/Users/imform/Documents/Flow/src/components/contentWrite/index.tsx",[],"/Users/imform/Documents/Flow/src/store/store.ts",[],"/Users/imform/Documents/Flow/src/store/write.ts",["112"],"import { createSlice } from '@reduxjs/toolkit';\n\nconst writeSlice = createSlice({\n  name: 'write',\n  initialState: {\n    content: [],\n  },\n  reducers: {\n    write: (state, action) => {\n      console.log(action.payload);\n      state.content = action.payload;\n    },\n  },\n});\n\nexport const { write } = writeSlice.actions;\nexport const writeContent = (state: any) => state.write.content;\n\nexport default writeSlice.reducer;\n","/Users/imform/Documents/Flow/src/store/menu.ts",["113"],"import { createSlice } from '@reduxjs/toolkit';\n\nconst menuSlice = createSlice({\n  name: 'menu',\n  initialState: {\n    onMenu: 'all',\n  },\n  reducers: {\n    menuChange: (state, action) => {\n      state.onMenu = action.payload;\n    },\n  },\n});\n\nexport const { menuChange } = menuSlice.actions;\nexport const selectMenu = (state: any) => state.menu.onMenu;\n\nexport default menuSlice.reducer;\n","/Users/imform/Documents/Flow/src/store/project.ts",["114"],"import { createSlice } from '@reduxjs/toolkit';\n\nconst projectsSlice = createSlice({\n  name: 'projects',\n  initialState: {\n    projectList: [\n      {\n        id: 135232,\n        title: 'title1',\n        participants: [\n          {\n            name: '관리자1',\n            auth: 'admin',\n          },\n          {\n            name: '관리자2',\n            auth: 'admin',\n          },\n        ],\n        favorites: false,\n      },\n      {\n        id: 263632,\n        title: 'title2',\n        participants: [\n          {\n            name: '관리자1',\n            auth: 'admin',\n          },\n          {\n            name: '관리자2',\n            auth: 'admin',\n          },\n        ],\n        favorites: false,\n      },\n      {\n        id: 313627,\n        title: 'title3',\n        participants: [\n          {\n            name: '관리자1',\n            auth: 'admin',\n          },\n          {\n            name: '관리자2',\n            auth: 'admin',\n          },\n        ],\n        favorites: false,\n      },\n    ],\n  },\n  reducers: {\n    add: (state, action) => {\n      console.log(state.projectList);\n      state.projectList = action.payload;\n    },\n    remove: (state, action) => {\n      console.log(state.projectList);\n      state.projectList = action.payload;\n    },\n    update: (state, action) => {\n      const { auth, name, projectid } = action.payload;\n      let _projectList = state.projectList.find((x) => x.id === projectid);\n      if (_projectList) {\n        _projectList.participants = [..._projectList.participants, { name, auth }];\n      }\n    },\n    favorite: (state, action) => {\n      state.projectList = action.payload;\n    },\n  },\n});\n\nexport const { add, remove, update, favorite } = projectsSlice.actions;\nexport const selectProjects = (state: any) => state.projects.projectList;\n\nexport default projectsSlice.reducer;\n",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":null,"fatal":true,"severity":2,"message":"119","line":124,"column":0},{"ruleId":"120","severity":1,"message":"121","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":21},{"ruleId":"120","severity":1,"message":"124","line":20,"column":11,"nodeType":"122","messageId":"123","endLine":20,"endColumn":22},{"ruleId":"120","severity":1,"message":"125","line":1,"column":23,"nodeType":"122","messageId":"123","endLine":1,"endColumn":37},{"ruleId":"120","severity":1,"message":"125","line":1,"column":23,"nodeType":"122","messageId":"123","endLine":1,"endColumn":37},{"ruleId":"120","severity":1,"message":"125","line":1,"column":23,"nodeType":"122","messageId":"123","endLine":1,"endColumn":37},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"Parsing error: Merge conflict marker encountered.","@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'projectItem' is defined but never used.","'configureStore' is defined but never used.","no-global-assign","no-unsafe-negation"]