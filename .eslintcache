[{"/Users/imform/Documents/Flow/src/index.tsx":"1","/Users/imform/Documents/Flow/src/App.tsx":"2","/Users/imform/Documents/Flow/src/store/index.ts":"3","/Users/imform/Documents/Flow/src/pages/index.ts":"4","/Users/imform/Documents/Flow/src/routes/index.ts":"5","/Users/imform/Documents/Flow/src/routes/const.ts":"6","/Users/imform/Documents/Flow/src/pages/content/index.tsx":"7","/Users/imform/Documents/Flow/src/pages/main/index.tsx":"8","/Users/imform/Documents/Flow/src/layouts/index.tsx":"9","/Users/imform/Documents/Flow/src/containers/index.tsx":"10","/Users/imform/Documents/Flow/src/containers/mainContainer/index.tsx":"11","/Users/imform/Documents/Flow/src/layouts/mainLayout/index.tsx":"12","/Users/imform/Documents/Flow/src/containers/contentContainer/index.tsx":"13","/Users/imform/Documents/Flow/src/modules/project/favoriteProject.ts":"14","/Users/imform/Documents/Flow/src/components/index.ts":"15","/Users/imform/Documents/Flow/src/components/sideNav/index.tsx":"16","/Users/imform/Documents/Flow/src/components/contentChart/index.tsx":"17","/Users/imform/Documents/Flow/src/components/contentTicket/index.tsx":"18","/Users/imform/Documents/Flow/src/components/mainBox/index.tsx":"19","/Users/imform/Documents/Flow/src/components/contentAside/index.tsx":"20"},{"size":335,"mtime":1610332609157,"results":"21","hashOfConfig":"22"},{"size":554,"mtime":1610350714825,"results":"23","hashOfConfig":"22"},{"size":2100,"mtime":1610417550031,"results":"24","hashOfConfig":"22"},{"size":98,"mtime":1610332609161,"results":"25","hashOfConfig":"22"},{"size":460,"mtime":1610335222777,"results":"26","hashOfConfig":"22"},{"size":69,"mtime":1610323738886,"results":"27","hashOfConfig":"22"},{"size":243,"mtime":1610335222774,"results":"28","hashOfConfig":"22"},{"size":273,"mtime":1610332609163,"results":"29","hashOfConfig":"22"},{"size":54,"mtime":1610332609159,"results":"30","hashOfConfig":"22"},{"size":126,"mtime":1610332609155,"results":"31","hashOfConfig":"22"},{"size":843,"mtime":1610417550029,"results":"32","hashOfConfig":"22"},{"size":2565,"mtime":1610412723445,"results":"33","hashOfConfig":"22"},{"size":4042,"mtime":1610417550028,"results":"34","hashOfConfig":"22"},{"size":540,"mtime":1610412723450,"results":"35","hashOfConfig":"22"},{"size":151,"mtime":1610350714837,"results":"36","hashOfConfig":"22"},{"size":4179,"mtime":1610410746332,"results":"37","hashOfConfig":"22"},{"size":89,"mtime":1610350714830,"results":"38","hashOfConfig":"22"},{"size":90,"mtime":1610350714831,"results":"39","hashOfConfig":"22"},{"size":4797,"mtime":1610417550027,"results":"40","hashOfConfig":"22"},{"size":2655,"mtime":1610412723441,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"142ibnu",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/imform/Documents/Flow/src/index.tsx",[],"/Users/imform/Documents/Flow/src/App.tsx",[],"/Users/imform/Documents/Flow/src/store/index.ts",[],["85","86"],"/Users/imform/Documents/Flow/src/pages/index.ts",[],"/Users/imform/Documents/Flow/src/routes/index.ts",[],"/Users/imform/Documents/Flow/src/routes/const.ts",[],"/Users/imform/Documents/Flow/src/pages/content/index.tsx",[],"/Users/imform/Documents/Flow/src/pages/main/index.tsx",[],"/Users/imform/Documents/Flow/src/layouts/index.tsx",[],"/Users/imform/Documents/Flow/src/containers/index.tsx",[],"/Users/imform/Documents/Flow/src/containers/mainContainer/index.tsx",[],"/Users/imform/Documents/Flow/src/layouts/mainLayout/index.tsx",[],"/Users/imform/Documents/Flow/src/containers/contentContainer/index.tsx",["87","88"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { update, favorite, selectProjects } from 'store';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\n\n//components\nimport { Tabs } from 'antd';\nimport { ContentChart, ContentTicket, ContentAside } from 'components';\nimport { checkFavorit } from 'modules/project/favoriteProject';\n\nconst { TabPane } = Tabs;\n\nconst ContentStyle = styled.div`\n  display: flex;\n  padding: 20px 20px;\n  box-sizing: border-box;\n  > div:nth-child(1) {\n    width: 60%;\n  }\n  > div:nth-child(2) {\n    width: 40%;\n  }\n\n  .project-title {\n    h2 {\n      line-height: 1;\n      margin: 0;\n  }\n`;\nconst FavoritesProjectStyle = styled(FontAwesomeIcon)`\n  color: block;\n  margin-right: 10px;\n`;\n\nconst ContentBox = styled.div`\n  width: 95%;\n  padding: 20px;\n  box-sizing: border-box;\n  border-radius: 10px;\n  background: #fff;\n  margin-top: 5px;\n`;\n\nfunction callback(key: any) {\n  //tab\n  console.log(key);\n}\n\nconst ContentContainer = () => {\n  const [isModalVisible, setIsModalVisible] = useState<boolean>(false);\n  const [participantName, setParticipantName] = useState<string>('');\n\n  const projectsList = useSelector(selectProjects);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const productList = useSelector(selectProjects);\n\n  function findProject(productList: any) {\n    return productList.id === Number(history.location.pathname.split('/')[1]);\n  }\n\n  // const addParticipants = (selectProject: { people: [{ name: string; auth: string }] }) => {\n  const addParticipants = (productList: any) => {\n    projectsList.map((people: { id: number; people: [name: any, auth: string] }) => {\n      const itemId = Number(history.location.pathname.split('/')[1]);\n      if (people.id === itemId) {\n        return dispatch(\n          update({\n            people: {\n              name: participantName,\n              auth: '게스트',\n            },\n          })\n        );\n      }\n    });\n    // setIsModalVisible(false);\n  };\n\n  const selectProject = productList.find(findProject);\n\n  console.log(selectProject);\n\n  return (\n    <ContentStyle>\n      <div>\n        <ContentBox className=\"project-title\">\n          <h2 data-id={selectProject.id}>\n            <FavoritesProjectStyle\n              style={{\n                color: selectProject.favorites === true ? 'yellow' : 'black',\n              }}\n              className=\"favorites-project\"\n              icon={faStar}\n              onClick={(e) => checkFavorit(e, projectsList, dispatch, favorite)}\n            ></FavoritesProjectStyle>\n            {selectProject.title}({selectProject.people.length})\n          </h2>\n        </ContentBox>\n        <ContentBox>\n          <ContentChart />\n        </ContentBox>\n        <ContentBox>\n          <Tabs defaultActiveKey=\"1\" onChange={callback}>\n            <TabPane tab=\"글쓰기\" key=\"1\">\n              Content of Tab Pane 1\n            </TabPane>\n            <TabPane tab=\"할 일\" key=\"2\">\n              Content of Tab Pane 2\n            </TabPane>\n          </Tabs>\n        </ContentBox>\n        <ContentBox>\n          <h4>상단고정글</h4>\n          <ul>\n            <li>\n              [업무] B2B매거진 대리점현황 오류 <span>진행</span>\n            </li>\n          </ul>\n        </ContentBox>\n        <ContentBox>\n          <ContentTicket />\n        </ContentBox>\n      </div>\n      <ContentAside\n        selectProject={selectProject}\n        addParticipants={addParticipants}\n        handleCancel={handleCancel}\n        showModal={showModal}\n        isModalVisible={isModalVisible}\n        productList={productList}\n        setParticipantName={setParticipantName}\n      />\n    </ContentStyle>\n  );\n};\n\nexport default ContentContainer;\n","/Users/imform/Documents/Flow/src/modules/project/favoriteProject.ts",[],"/Users/imform/Documents/Flow/src/components/index.ts",[],"/Users/imform/Documents/Flow/src/components/sideNav/index.tsx",[],"/Users/imform/Documents/Flow/src/components/contentChart/index.tsx",[],"/Users/imform/Documents/Flow/src/components/contentTicket/index.tsx",[],"/Users/imform/Documents/Flow/src/components/mainBox/index.tsx",["89","90"],"import React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectMenu, selectProjects } from 'store';\nimport { Link } from 'react-router-dom';\n\nimport { Modal } from 'antd';\n\n// interface favoritesProps {\n//   favorites: boolean;\n//   setFavorites: Dispatch<SetStateAction<boolean>>;\n// }\n\ninterface removeProjectProps {\n  removeProject: (e: any) => void;\n  checkFavorit: (e: any) => void;\n}\ninterface projectItem {\n  id: number;\n  title: string;\n  people: number;\n}\n\nconst ItemStyle = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 20px 20px;\n  box-sizing: border-box;\n`;\nconst ItemBoxStyle = styled.div`\n  margin-right: 15px;\n  width: 200px;\n  height: 200px;\n  border-radius: 10px;\n  padding: 15px;\n  box-sizing: border-box;\n  background: ${(props) => props.color};\n  font-size: 16px;\n`;\n\nconst FavoritesProjectStyle = styled(FontAwesomeIcon)`\n  color: block;\n  margin-right: 10px;\n`;\n\nexport const MainBox = ({ removeProject, checkFavorit }: removeProjectProps) => {\n  const itemBoxWrapper = useRef<any>();\n  const [isModalVisible, setIsModalVisible] = useState<boolean>(false);\n  const [thisProject, setThisProject] = useState<any>();\n\n  const removeRef = useRef<any>();\n\n  const color = [\n    'mistyrose',\n    'skyblue',\n    'gold',\n    'tomato',\n    'coral',\n    'gray',\n    'aquamarine',\n    'thistle',\n    'lightblue',\n    'cornflowerblue',\n  ];\n\n  const productList = useSelector(selectProjects);\n  const menu = useSelector(selectMenu);\n\n  const showModal = (e: any) => {\n    setIsModalVisible(true);\n    setThisProject(e);\n  };\n\n  const removeCancel = () => {\n    removeProject(thisProject);\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  console.log(removeRef);\n  return (\n    <ItemStyle>\n      {menu === 'all' ? (\n        <>\n          {productList &&\n            productList.map((items: any, index: any) => {\n              console.log(items.favorites);\n              return (\n                <ItemBoxStyle\n                  key={items.id}\n                  color={color[Math.floor(Math.random() * 10)]}\n                  ref={itemBoxWrapper}\n                  data-id={items.id}\n                >\n                  <p style={{ textAlign: 'right', lineHeight: '16px' }} onClick={(e) => showModal(e)} ref={removeRef}>\n                    X\n                  </p>\n                  <Modal\n                    title=\"프로젝트를 삭제 하시겠습니까?\"\n                    visible={isModalVisible}\n                    onOk={removeCancel}\n                    onCancel={handleCancel}\n                  ></Modal>\n                  <Link to={`${items.id}`}>\n                    <h3>{items.title}</h3>\n                  </Link>\n                  <p>{items.people.length}명 참여중</p>\n                  <FavoritesProjectStyle\n                    style={{\n                      color: items.favorites === true ? 'yellow' : 'black',\n                    }}\n                    className=\"favorites-project\"\n                    icon={faStar}\n                    onClick={(e) => checkFavorit(e)}\n                  ></FavoritesProjectStyle>\n                </ItemBoxStyle>\n              );\n            })}\n        </>\n      ) : (\n        productList\n          .filter((item: any) => {\n            return item.favorites;\n          })\n          .map((items: any, index: any) => {\n            return (\n              <ItemBoxStyle\n                key={items.id}\n                color={color[Math.floor(Math.random() * 10)]}\n                ref={itemBoxWrapper}\n                data-id={items.id}\n              >\n                <p style={{ textAlign: 'right', lineHeight: '16px' }} onClick={(e) => showModal(e)} ref={removeRef}>\n                  X\n                </p>\n                <Modal\n                  title=\"프로젝트를 삭제 하시겠습니까?\"\n                  visible={isModalVisible}\n                  onOk={removeCancel}\n                  onCancel={handleCancel}\n                ></Modal>\n                <Link to={`${items.id}`}>\n                  <h3>{items.title}</h3>\n                </Link>\n                <p>{items.people.length}명 참여중</p>\n                <FavoritesProjectStyle\n                  style={{\n                    color: items.favorites === true ? 'yellow' : 'black',\n                  }}\n                  className=\"favorites-project\"\n                  icon={faStar}\n                  onClick={(e) => checkFavorit(e)}\n                ></FavoritesProjectStyle>\n              </ItemBoxStyle>\n            );\n          })\n      )}\n    </ItemStyle>\n  );\n};\n","/Users/imform/Documents/Flow/src/components/contentAside/index.tsx",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":16,"column":9,"nodeType":"97","messageId":"98","endLine":16,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":76,"column":82,"nodeType":"101","messageId":"102","endLine":76,"endColumn":84},{"ruleId":"95","severity":1,"message":"103","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":21},{"ruleId":"95","severity":1,"message":"104","line":20,"column":11,"nodeType":"97","messageId":"98","endLine":20,"endColumn":22},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"@typescript-eslint/no-unused-vars","'TabPane' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useDispatch' is defined but never used.","'projectItem' is defined but never used.","no-global-assign","no-unsafe-negation"]